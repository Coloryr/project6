<!DOCTYPE html>
<html lang="zh-CN">

<head>
    <meta charset="utf-8">
    <title>垃圾桶地图</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta http-equiv="X-UA-Compatible" content="IE=Edge">
    <style>
        body,
        html,
        #container {
            overflow: hidden;
            width: 100%;
            height: 100%;
            margin: 0;
            font-family: "微软雅黑";
        }
    </style>
</head>

<body>
    <div id="container"></div>
</body>
<script>
    var map;
    var myIcon;
    var points = new Array();
    var selfmark;
    function loadJScript() {
        var script = document.createElement('script');
        script.type = 'text/javascript';
        script.src = 'http://api.map.baidu.com/api?type=webgl&v=1.0&ak=dreuI9roYFEZv2u0kRBbWsriknnzlhZp&callback=init';
        document.body.appendChild(script);
    }
    function init() {
        map = new BMapGL.Map('container'); // 创建Map实例
        myIcon = new BMapGL.Icon("/icon.png", new BMapGL.Size(40, 40));
        var point = new BMapGL.Point(116.404, 39.915); // 创建点坐标
        map.centerAndZoom(point, 10);
        map.enableScrollWheelZoom(); // 启用滚轮放大缩小
        var scaleCtrl = new BMapGL.ScaleControl();  // 添加比例尺控件
        map.addControl(scaleCtrl);
        var zoomCtrl = new BMapGL.ZoomControl();  // 添加比例尺控件
        map.addControl(zoomCtrl);
        var menu = new BMapGL.ContextMenu();
        var txtMenuItem = [
            {
                text: '放大一级',
                callback: function () {
                    map.zoomIn();
                }
            }, {
                text: '缩小一级',
                callback: function () {
                    map.zoomOut();
                }
            }
        ];
        for (var i = 0; i < txtMenuItem.length; i++) {
            menu.addItem(new BMapGL.MenuItem(txtMenuItem[i].text, txtMenuItem[i].callback, 100));
        }
        map.addContextMenu(menu);
    }
    function addpoint(x, y, name, text) {
        var point = new BMapGL.Point(x, y); // 创建点坐标
        // 创建点标记
        var marker = new BMapGL.Marker(point, {
            icon: myIcon
        });
        map.addOverlay(marker);
        // 创建信息窗口
        var opts = {
            width: 200,
            height: 150,
            title: name
        };
        var infoWindow = new BMapGL.InfoWindow(text, opts);
        // 点标记添加点击事件
        marker.addEventListener('click', function () {
            map.openInfoWindow(infoWindow, point); // 开启信息窗口
        });
        points[name] = marker;
        return true;
    }
    function removepoint(name) {
        if (!!points[name]) {
            map.removeOverlay(points[name]);
            delete (points[name]);
            return true;
        }
        return false;
    }
    function selfpoint(x, y) {
        if (selfmark != null) {
            map.removeOverlay(selfmark);
        }
        var point = new BMapGL.Point(x, y);
        selfmark = new BMapGL.Marker(point);
        map.addOverlay(selfmark);
        return true;
    }
    function clearpoint() {
        map.clearOverlays();
        return true;
    }
    function turnto(x, y) {
        var point = new BMapGL.Point(x, y); // 创建点坐标
        map.panTo(point);
    }
    window.onload = loadJScript; // 异步加载地图
</script>

</html>